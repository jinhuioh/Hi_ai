#주피터 정리

EDA:데이터살펴보는 단계. 데이터 탐색. 탐구데이터분석
       통계치(합계,최대치,그룹묶어서 평균 등)
EDA : 전략적 데이터 탐구, info(), describe(), group, feature range, visualization~~

ETL:내가 원하는 데이터를 추출하고, 변화시키고, 로딩
ETL: Extract, Transform, Load


import warnings
warnings.filterwarnings(action='ignore')#임포트 해주면
 그래프 그릴때 무시해도 되는 오류 안뜸!


!!임포트:
#이거 임포트 해줘야 차트에서 오류안남!!! 한글파일때문에 오류나는거.
from matplotlib import rc, font_manager
import matplotlib.font_manager as fm
# 디렉토리 및 파일 이름에 맞추어 변경
font_location = 'C:/Windows/Fonts/malgun.ttf'#윈도우안에있는 폰트파일주소.
#font_location = '../NanumGothic.ttf'
font_name = fm.FontProperties(fname=font_location).get_name()
rc('font', family=font_name)

import pandas as pd: 데이터 프레임 쓸 때 필요한 모듈,데이터분석용
import numpy as np : n 차원 행렬 자료 구조를 지원,데이터분석용
import seaborn as sns:데이터 시각화를 담당하는 모듈,데이터 시각화
from sklearn.model_selection import train_test_split:머신러닝분석용:싸이키런sklearn
from matplotlib import rc, font_manager:데이터시각화
import matplotlib.font_manager as fm
# 디렉토리 및 파일 이름에 맞추어 변경
font_location = 'C:/Windows/Fonts/malgun.ttf'#윈도우안에있는 폰트파일주소.
#font_location = '../NanumGothic.ttf'
font_name = fm.FontProperties(fname=font_location).get_name()
rc('font', family=font_name)
:한글 파일 임포트


1. csv파일을 읽어올때
pd(변수명) = pd.read_csv('csv파일주소')

2.시본 데이터 셈플 가져올 때
anscombe(변수명) = sns.load_dataset('iris')

3.행렬 개수 구하기
df.shape

4. 해당 컬럼값들의 중복값과 빈도수 채크
df['컬럼명'].value_counts()

5.#시리즈는 인덱스+values로 구성
시리즈:컬럼의 값들의 결합

6.데이터프레임: 시리즈들의 결합.

1. 데이터를 분석하기 전 행렬구조의 데이터를 넣는 구조는?
데이터프레임

2. 1번의 데이터 구조를 사용하기 위한 라이브러리는?
pandas

3. 판단하기 적합한 선을 찾거나, 랜덤한 샘플 데이터를 만들기 위한 라이브러리는?
numpy

4. 데이터 분석과정 plot으로 확인하거나, 
최종 분석 결과를 표현하기 위한 plot을 사용한다.
이때 필요한 라이브러리는?
matplotlib.pyplot 

5.데이터 프레임에서 행과 열을 삭제하는 함수는?
drop
데이터프레임명.drop(columns=['컬럼명'], inplace=True)#열지우기
데이터프레임명.drop([인덱스], inplace=True)#행지우기
데이터프레임명.drop(index=[인덱스], inplace=True)#행지우기
6.두 데이터프레임을 조인할 때 행과 열을 합하는 함수는?
concat

7.데이터 프레임에서 두 항목의 상관 관계를 알기위한 함수는?
이 상관관계를 나타내는 숫자를 무엇이라고 하는가?
이 상관관계를 나타내는 숫자의 범위는?
corr()
상관계수
(+-)0~1까지

8. 7번의 결과가 0.78이 나왔다. 어떻게 판단하는가?
두 컬럼은 상관관계가  높다고 판단할 수 있다.

9. 데이터의 흩어져 있는 정도를 그릴 수 있는 plot은?한글/영문
산점도 scatter

10. 흩어져 있는 정도를 보고, plot위에 판단의 적정 기준선을 그려 넣고 싶다.
기준선을 넣기 위한 방법을 순서대로 함수를 이용하여 설명하시오.
scatter 그리고
regplot의 fit_reg=True이용

import seaborn as sns

11. fx가 타입이 array이면 5개의 값만 꺼내는 방법:
fx[:5]

12.리네임하는방법
df.rename(columns={cctv_seoul.columns[0]:'구별'},inplace=True)

13.#머지(merge) 함수를 사용해서 데이터프레임 합치기
data_result = pd.merge(cctv_seoul,pop_seoul,on='구별')
data_result.head()

14.정렬
cctv_seoul.sort_values(by='최근증가율',ascending=False).head()

15.
#산점도그리기
plt.scatter(data_result["인구수"],data_result['소계'], s=50, c='pink')#s는 점의 크기
plt.text(400000, 2500,'야야야')

16.heatmap그리기
dr_corr = data_result.corr()
dr_corr
cols = data_result.columns

sns.heatmap(dr_corr.values,
            cbar = True,
            annot= True,
            square=True, 
            fmt = '.2f',
            xticklabels=cols,
            yticklabels=cols
           )
15.
cctv_seoul['최근증가율'] = (cctv_seoul['2014년'] + cctv_seoul['2015년']
                       + cctv_seoul['2016년'])/ cctv_seoul['2013년도 이전']*100
cctv_seoul.head()

16.null값인 행들의 개수
print(df.isnull().sum())
#나이가 nan인 값들을 전부 평균으로 바꿔줌.
raw_data['age'] = raw_data['age'].fillna('29.8811345124283')#NaN값 자동으로 찾아서 값 넣어줌
print(raw_data['age'].isnull().sum())#nan값 몇개인지 찍어보면 0나와야함.

17.
# 전체 평균보다 많은 알코올을 섭취하는 대륙을 구합니다.
total_mean = df.total_litres_of_pure_alcohol.mean()
continent_mean = df.groupby('continent')['total_litres_of_pure_alcohol'].mean()
continent_over_mean = continent_mean[continent_mean >= total_mean]
print(continent_over_mean)

18.idxmax():최대값을 가지는 인덱스 레이블을 출력한다.
# 평균 beer_servings이 가장 높은 대륙을 구합니다.gs.
beer_continent = df.groupby('continent').beer_servings.mean().idxmax()
beer_continent

19.range 함수와 np.arange함수의 차이점
range: 정수 단위만 지원 range interator자료형 반환
np.arange: 실수 단위도 표현 가능 numpy array자료형을 반환

#heapmap, pairplot
#최근증가율과 소계의 상관관계
dr_corr = data_result.corr()
dr_corr

train_target.count()#시리즈는 카운트함수 사용가능

######################################3333
머신러닝,딥러닝:

from sklearn.neighbors import KNeighborsClassifier
:최근접 이웃 알고리즘을 구현한 클래스, 가장 가까운 이웃을 참고하여 정답을 
예측하는 알고리즘이 구현된 사이킷런 클래스

fit(): 훈련시킬땨 쓰는 함수
socre(): 훈련이 잘 되었는지 평가하는 함수(높을수록 정확도가 높다.)
predict(): 사이킷런 모델을 훈련하고 예측할 때 사용하는 메서드

isdecimal()함수:
for like in like_texts:
        if like.text.isdecimal():#이즈데시말: 문자인지 숫자인지 판단.
            print(int(like.text))#숫자를 인트값으로 바꿔줘
        else:
            pass

getText함수
addr = <td>서울시 강남구 영동대로 607 1,2층  <!--span class="lot">(서울시 강남구 영동대로 607 1,2층)</span--></td>
print(addr.getText())#getText함수를 사용해서 text만 추출
결과:서울시 강남구 영동대로 607 1,2층  

string함수
tel = <td>02-3443-5618</td>
print(tel.string)
결과: 02-3443-5618


#argmax:리스트값중 최대값을 가지는 인덱스를 가져다 줌
max_index = np.argmax(acc_total)